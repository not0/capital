---
import fs from "fs";
import path from "path";
const { comicId, episodeNumber } = Astro.props as {
  comicId: string;
  episodeNumber?: string;
};
const base = import.meta.env.BASE_URL;

const pagesPath = episodeNumber
  ? `assets/comics/${comicId}/episodes/${episodeNumber}/pages`
  : `assets/comics/${comicId}/pages`;

const pagesDir = path.resolve(`./public/${pagesPath}`);
let pages: string[] = [];
try {
  pages = fs.readdirSync(pagesDir).sort();
} catch (err) {
  console.error(`Error reading images for comic ID ${comicId}:`, err);
}

if (pages.length === 0) {
  throw new Error(
    `No images found for comic ID ${comicId} in directory ${pagesDir}`
  );
}
---

<style>
  .image-wrapper {
    width: 100%;
    margin-bottom: 3rem;
  }
</style>

<div class="container">
  {
    pages.map((name: string, idx: number) => (
      <div class="image-wrapper">
        <div
          class="skeleton-block"
          id={`skeleton-${idx}`}
          style="height: 70vh;"
        />
        <img
          src={`${base}${pagesPath}/${name}`}
          alt={name}
          loading="lazy"
          style="width: 100%; display: block;"
          onload={`document.getElementById('skeleton-${idx}').style.display='none';`}
        />
      </div>
    ))
  }
</div>
