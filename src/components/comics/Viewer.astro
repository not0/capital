---
import fs from "fs";
import path from "path";
import { getAllComics, getComicById } from "@models/comic";
const { comicId, episodeNumber } = Astro.props as {
  comicId: string;
  episodeNumber?: string;
};
const comic = getComicById(comicId);
if (!comic) throw new Error("Comic not found");

export async function getStaticPaths() {
  const comics = getAllComics();
  return comics.map((comic) => ({
    params: { id: String(comic.id) },
  }));
}

const base = import.meta.env.BASE_URL;

const pagesBase = episodeNumber
  ? `assets/comics/${comicId}/episodes/${episodeNumber}/pages`
  : `assets/comics/${comicId}/pages`;

const pagesDir = path.resolve(`./public/${pagesBase}`);
let pages: string[] = [];
try {
  pages = fs.readdirSync(pagesDir).sort();
} catch (err) {
  console.error(`Error reading images for comic ID ${comic.id}:`, err);
}

if (pages.length === 0) {
  throw new Error(
    `No images found for comic ID ${comic.id} in directory ${pagesDir}`
  );
}

const pagePaths = pages.map((name) => {
  return `${base}${pagesBase}/${name}`;
});
---

<style>
  .viewer {
    position: fixed;
    inset: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background: black;
    overflow: hidden;
  }
  .page {
    max-height: 100%;
    object-fit: contain;
  }

  .page.single {
    max-width: 100%;
  }

  .page.spread {
    max-width: 50%;
  }
  .overlay {
    position: fixed;
    inset: 0;
    display: flex;
    justify-content: space-between;
    align-items: stretch;
  }
  .click-zone {
    flex: 1;
    cursor: pointer;
  }
  .close-button {
    position: fixed;
    top: 16px;
    left: 16px;
    z-index: 10;
    background: rgba(255, 255, 255, 0.8);
    padding: 4px 8px;
    border: none;
    cursor: pointer;
  }
</style>

<button class="close-button" onclick="window.location.href = '/comics/${id}'"
  >閉じる</button
>
<div class="viewer" id="viewer" data-id="{id}"></div>

<template id="page-single-template">
  <img class="page single" />
</template>
<template id="page-spread-template">
  <img class="page spread" />
</template>

<div class="overlay">
  <div class="click-zone" id="left"></div>
  <div class="click-zone" id="right"></div>
</div>

<script
  type="application/json"
  id="page-data"
  set:html={JSON.stringify(pagePaths)}
/>

<script>
  (async function () {
    const viewer = document.getElementById("viewer");
    const singleTemplate = document.getElementById("page-single-template");
    const spreadTemplate = document.getElementById("page-spread-template");
    const pages = JSON.parse(document.getElementById("page-data").textContent);
    let index = 0;

    function isSpread() {
      return window.innerWidth >= 1024;
    }

    function render() {
      viewer.innerHTML = "";
      const step = isSpread() ? 2 : 1;
      const tmpl = step === 1 ? singleTemplate : spreadTemplate;
      const start = index;
      const end = Math.min(index + step, pages.length);
      for (let i = end - 1; i >= start; i--) {
        const img = tmpl.content.firstElementChild.cloneNode(true);
        img.src = `${pages[i]}`;
        viewer.appendChild(img);
      }
    }

    function next() {
      const step = isSpread() ? 2 : 1;
      if (index + step < pages.length) {
        index += step;
        render();
      }
    }

    function prev() {
      const step = isSpread() ? 2 : 1;
      if (index - step >= 0) {
        index -= step;
        render();
      }
    }

    document.getElementById("left").addEventListener("click", next);
    document.getElementById("right").addEventListener("click", prev);
    window.addEventListener("resize", render);

    render();
  })();
</script>
