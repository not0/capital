---
import BaseLayout from "@layouts/BaseLayout.astro";
import { getAllComics, getComicById } from "@models/comic";
import Pages from "@components/comics/Pages.astro";
import Episodes from "@components/comics/Episodes.astro";
import ViewerWrapper from "@components/comics/ViewerWrapper.astro";
import { getThumbnailPath } from "@utils/comicImage";

export async function getStaticPaths() {
  const comics = getAllComics();
  return comics.map((comic) => ({
    params: { id: String(comic.id) },
  }));
}

const { id } = Astro.params;
const comic =
  getComicById(id) ??
  (() => {
    throw new Error(`Comic with ID ${id} not found`);
  })();

const base = import.meta.env.BASE_URL;
---

<BaseLayout title={`${comic.title}`}>
  <Fragment slot="og">
    <meta property="og:title" content={comic.title} />
    <meta property="og:description" content={comic.description} />
    <meta property="og:type" content="article" />
    <meta
      property="og:image"
      content={new URL(getThumbnailPath(comic), Astro.url)}
    />
    <meta name="twitter:card" content="summary_large_image" />
  </Fragment>

  <section class="section">
    <div class="container has-text-centered">
      <h1 class="title is-3 is-spaced">{comic.title}</h1>
      <h2 class="subtitle is-6">{comic.description}</h2>
    </div>
  </section>

  {
    comic.episodes.length > 0 ? (
      <Episodes comic={comic} />
    ) : comic.viewer === "vertical" ? (
      <Pages comicId={id} />
    ) : (
      <ViewerWrapper comic={comic} closeUrl={`${base}comics`} />
    )
  }

  <div class="buttons is-centered pb-6">
    <a class="button" href={`${base}comics`}> 一覧に戻る </a>
  </div>
</BaseLayout>
