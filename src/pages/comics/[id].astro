---
import fs from "fs";
import path from "path";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getAllComics, getComicById } from "../../models/comic";
import Pages from "../../components/comics/Pages.astro";
import Episodes from "../../components/comics/Episodes.astro";
import ViewerLauncher from "@components/comics/ViewerLauncher.svelte";

export async function getStaticPaths() {
  const comics = getAllComics();
  return comics.map((comic) => ({
    params: { id: String(comic.id) },
  }));
}

const { id } = Astro.params;
const comic =
  getComicById(id) ??
  (() => {
    throw new Error(`Comic with ID ${id} not found`);
  })();

const base = import.meta.env.BASE_URL;

const pagesBase = `assets/comics/${comic.id}/pages`;

const pagesDir = path.resolve(`./public/${pagesBase}`);
let pages: string[] = [];
try {
  pages = fs.readdirSync(pagesDir).sort();
} catch (err) {
  console.error(`Error reading images for comic ID ${comic.id}:`, err);
}

if (pages.length === 0) {
  throw new Error(
    `No images found for comic ID ${comic.id} in directory ${pagesDir}`
  );
}

const pagePaths = pages.map((name) => {
  return `${base}${pagesBase}/${name}`;
});
---

<BaseLayout title={`${comic.title}`}>
  <section class="section">
    <div class="container has-text-centered">
      <h1 class="title is-3 is-spaced">{comic.title}</h1>
      <h2 class="subtitle is-6">{comic.description}</h2>
    </div>
  </section>

  <ViewerLauncher client:only="svelte" pages={pagePaths} />

  {
    comic.episodes.length > 0 ? (
      <Episodes comic={comic} />
    ) : (
      <Pages comicId={id} />
    )
  }
  <div class="buttons is-centered pb-6">
    <a class="button" href={`${base}comics`}> 一覧に戻る </a>
  </div>
</BaseLayout>
